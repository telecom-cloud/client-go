// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.25.1
// source: status.proto

package errors

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatusReason int32

const (
	// Unknown means the server has declined to indicate a specific reason.
	// The details field may contain other information about this error.
	// Status code 500.
	StatusReason_Unknown StatusReason = 0
	// Unauthorized means the server can be reached and understood the request, but requires
	// the user to present appropriate authorization credentials (identified by the WWW-Authenticate header)
	// in order for the action to be completed. If the user has specified credentials on the request, the
	// server considers them insufficient.
	// Status code 401
	StatusReason_Unauthorized StatusReason = 1
	// Forbidden means the server can be reached and understood the request, but refuses
	// to take any further action.  It is the result of the server being configured to deny access for some reason
	// to the requested resource by the client.
	// Status code 403
	StatusReason_Forbidden StatusReason = 2
	// NotFound means one or more resources required for this operation
	// could not be found.
	// Status code 404
	StatusReason_NotFound StatusReason = 3
	// AlreadyExists means the resource you are creating already exists.
	// Status code 409
	StatusReason_AlreadyExists StatusReason = 4
	// Conflict means the requested operation cannot be completed
	// due to a conflict in the operation. The client may need to alter the
	// request. Each resource may define custom details that indicate the
	// nature of the conflict.
	// Status code 409
	StatusReason_Conflict StatusReason = 5
	// Gone means the item is no longer available at the server and no
	// forwarding address is known.
	// Status code 410
	StatusReason_Gone StatusReason = 6
	// Invalid means the requested create or update operation cannot be
	// completed due to invalid data provided as part of the request. The client may
	// need to alter the request. When set, the client may use the StatusDetails
	// message field as a summary of the issues encountered.
	// Status code 422
	StatusReason_Invalid StatusReason = 7
	// ServerTimeout means the server can be reached and understood the request,
	// but cannot complete the action in a reasonable time. The client should retry the request.
	// This is may be due to temporary server load or a transient communication issue with
	// another server. Status code 500 is used because the HTTP spec provides no suitable
	// server-requested client retry and the 5xx class represents actionable errors.
	// Status code 500
	StatusReason_ServerTimeout StatusReason = 8
	// Timeout means that the request could not be completed within the given time.
	// Clients can get this response only when they specified a timeout param in the request,
	// or if the server cannot complete the operation within a reasonable amount of time.
	// The request might succeed with an increased value of timeout param. The client *should*
	// wait at least the number of seconds specified by the retryAfterSeconds field.
	// Details (optional):
	//
	//	"retryAfterSeconds" int32 - the number of seconds before the operation should be retried
	//
	// Status code 504
	StatusReason_Timeout StatusReason = 9
	// TooManyRequests means the server experienced too many requests within a
	// given window and that the client must wait to perform the action again. A client may
	// always retry the request that led to this error, although the client should wait at least
	// the number of seconds specified by the retryAfterSeconds field.
	// Details (optional):
	//
	//	"retryAfterSeconds" int32 - the number of seconds before the operation should be retried
	//
	// Status code 429
	StatusReason_TooManyRequests StatusReason = 10
	// BadRequest means that the request itself was invalid, because the request
	// doesn't make any sense, for example deleting a read-only object.  This is different than
	// Invalid above which indicates that the API call could possibly succeed, but the
	// data was invalid.  API calls that return BadRequest can never succeed.
	// Status code 400
	StatusReason_BadRequest StatusReason = 11
	// MethodNotAllowed means that the action the client attempted to perform on the
	// resource was not supported by the code - for instance, attempting to delete a resource that
	// can only be created. API calls that return MethodNotAllowed can never succeed.
	// Status code 405
	StatusReason_MethodNotAllowed StatusReason = 12
	// NotAcceptable means that the accept types indicated by the client were not acceptable
	// to the server - for instance, attempting to receive protobuf for a resource that supports only json and yaml.
	// API calls that return NotAcceptable can never succeed.
	// Status code 406
	StatusReason_NotAcceptable StatusReason = 13
	// RequestEntityTooLarge means that the request entity is too large.
	// Status code 413
	StatusReason_RequestEntityTooLarge StatusReason = 14
	// UnsupportedMediaType means that the content type sent by the client is not acceptable
	// to the server - for instance, attempting to send protobuf for a resource that supports only json and yaml.
	// API calls that return UnsupportedMediaType can never succeed.
	// Status code 415
	StatusReason_UnsupportedMediaType StatusReason = 15
	// InternalError indicates that an internal error occurred, it is unexpected
	// and the outcome of the call is unknown.
	// Details (optional):
	//
	//	"causes" - The original error
	//
	// Status code 500
	StatusReason_InternalError StatusReason = 16
	// Expired indicates that the request is invalid because the content you are requesting
	// has expired and is no longer available. It is typically associated with watches that can't be
	// serviced.
	// Status code 410 (gone)
	StatusReason_Expired StatusReason = 17
	// ServiceUnavailable means that the request itself was valid,
	// but the requested service is unavailable at this time.
	// Retrying the request after some time might succeed.
	// Status code 503
	StatusReason_ServiceUnavailable StatusReason = 18
	// PaymentRequired indicates that requested content is not available until the client makes a payment.
	StatusReason_PaymentRequired StatusReason = 20
	StatusReason_RequestTimeout  StatusReason = 21
)

// Enum value maps for StatusReason.
var (
	StatusReason_name = map[int32]string{
		0:  "Unknown",
		1:  "Unauthorized",
		2:  "Forbidden",
		3:  "NotFound",
		4:  "AlreadyExists",
		5:  "Conflict",
		6:  "Gone",
		7:  "Invalid",
		8:  "ServerTimeout",
		9:  "Timeout",
		10: "TooManyRequests",
		11: "BadRequest",
		12: "MethodNotAllowed",
		13: "NotAcceptable",
		14: "RequestEntityTooLarge",
		15: "UnsupportedMediaType",
		16: "InternalError",
		17: "Expired",
		18: "ServiceUnavailable",
		20: "PaymentRequired",
		21: "RequestTimeout",
	}
	StatusReason_value = map[string]int32{
		"Unknown":               0,
		"Unauthorized":          1,
		"Forbidden":             2,
		"NotFound":              3,
		"AlreadyExists":         4,
		"Conflict":              5,
		"Gone":                  6,
		"Invalid":               7,
		"ServerTimeout":         8,
		"Timeout":               9,
		"TooManyRequests":       10,
		"BadRequest":            11,
		"MethodNotAllowed":      12,
		"NotAcceptable":         13,
		"RequestEntityTooLarge": 14,
		"UnsupportedMediaType":  15,
		"InternalError":         16,
		"Expired":               17,
		"ServiceUnavailable":    18,
		"PaymentRequired":       20,
		"RequestTimeout":        21,
	}
)

func (x StatusReason) Enum() *StatusReason {
	p := new(StatusReason)
	*p = x
	return p
}

func (x StatusReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusReason) Descriptor() protoreflect.EnumDescriptor {
	return file_status_proto_enumTypes[0].Descriptor()
}

func (StatusReason) Type() protoreflect.EnumType {
	return &file_status_proto_enumTypes[0]
}

func (x StatusReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusReason.Descriptor instead.
func (StatusReason) EnumDescriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{0}
}

type ExtendStatusReason int32

const (
	ExtendStatusReason_QuotaExceed ExtendStatusReason = 0
	ExtendStatusReason_OutOfRange  ExtendStatusReason = 1
)

// Enum value maps for ExtendStatusReason.
var (
	ExtendStatusReason_name = map[int32]string{
		0: "QuotaExceed",
		1: "OutOfRange",
	}
	ExtendStatusReason_value = map[string]int32{
		"QuotaExceed": 0,
		"OutOfRange":  1,
	}
)

func (x ExtendStatusReason) Enum() *ExtendStatusReason {
	p := new(ExtendStatusReason)
	*p = x
	return p
}

func (x ExtendStatusReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExtendStatusReason) Descriptor() protoreflect.EnumDescriptor {
	return file_status_proto_enumTypes[1].Descriptor()
}

func (ExtendStatusReason) Type() protoreflect.EnumType {
	return &file_status_proto_enumTypes[1]
}

func (x ExtendStatusReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExtendStatusReason.Descriptor instead.
func (ExtendStatusReason) EnumDescriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{1}
}

var file_status_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*int32)(nil),
		Field:         1108,
		Name:          "errors.default_code",
		Tag:           "varint,1108,opt,name=default_code",
		Filename:      "status.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*int32)(nil),
		Field:         1109,
		Name:          "errors.code",
		Tag:           "varint,1109,opt,name=code",
		Filename:      "status.proto",
	},
}

// Extension fields to descriptorpb.EnumOptions.
var (
	// optional int32 default_code = 1108;
	E_DefaultCode = &file_status_proto_extTypes[0]
)

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional int32 code = 1109;
	E_Code = &file_status_proto_extTypes[1]
)

var File_status_proto protoreflect.FileDescriptor

var file_status_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0x84, 0x04, 0x0a, 0x0c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x11, 0x0a, 0x07, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x1a, 0x04, 0xa8, 0x45, 0xf4, 0x03, 0x12, 0x16, 0x0a, 0x0c,
	0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x10, 0x01, 0x1a, 0x04,
	0xa8, 0x45, 0x91, 0x03, 0x12, 0x13, 0x0a, 0x09, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x10, 0x02, 0x1a, 0x04, 0xa8, 0x45, 0x93, 0x03, 0x12, 0x12, 0x0a, 0x08, 0x4e, 0x6f, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x03, 0x1a, 0x04, 0xa8, 0x45, 0x94, 0x03, 0x12, 0x17, 0x0a,
	0x0d, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x10, 0x04,
	0x1a, 0x04, 0xa8, 0x45, 0x99, 0x03, 0x12, 0x12, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69,
	0x63, 0x74, 0x10, 0x05, 0x1a, 0x04, 0xa8, 0x45, 0x99, 0x03, 0x12, 0x0e, 0x0a, 0x04, 0x47, 0x6f,
	0x6e, 0x65, 0x10, 0x06, 0x1a, 0x04, 0xa8, 0x45, 0x9a, 0x03, 0x12, 0x11, 0x0a, 0x07, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x07, 0x1a, 0x04, 0xa8, 0x45, 0xa6, 0x03, 0x12, 0x17, 0x0a,
	0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x08,
	0x1a, 0x04, 0xa8, 0x45, 0xf4, 0x03, 0x12, 0x11, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x10, 0x09, 0x1a, 0x04, 0xa8, 0x45, 0xf8, 0x03, 0x12, 0x19, 0x0a, 0x0f, 0x54, 0x6f, 0x6f,
	0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x10, 0x0a, 0x1a, 0x04,
	0xa8, 0x45, 0xad, 0x03, 0x12, 0x14, 0x0a, 0x0a, 0x42, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x10, 0x0b, 0x1a, 0x04, 0xa8, 0x45, 0x90, 0x03, 0x12, 0x1a, 0x0a, 0x10, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x4e, 0x6f, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x10, 0x0c,
	0x1a, 0x04, 0xa8, 0x45, 0x95, 0x03, 0x12, 0x17, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x0d, 0x1a, 0x04, 0xa8, 0x45, 0x96, 0x03, 0x12,
	0x1f, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x54, 0x6f, 0x6f, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x10, 0x0e, 0x1a, 0x04, 0xa8, 0x45, 0x9d, 0x03,
	0x12, 0x1e, 0x0a, 0x14, 0x55, 0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x10, 0x0f, 0x1a, 0x04, 0xa8, 0x45, 0x9f, 0x03,
	0x12, 0x17, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0x10, 0x1a, 0x04, 0xa8, 0x45, 0xf4, 0x03, 0x12, 0x11, 0x0a, 0x07, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x10, 0x11, 0x1a, 0x04, 0xa8, 0x45, 0x9a, 0x03, 0x12, 0x1c, 0x0a, 0x12,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x10, 0x12, 0x1a, 0x04, 0xa8, 0x45, 0xf7, 0x03, 0x12, 0x19, 0x0a, 0x0f, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x10, 0x14, 0x1a,
	0x04, 0xa8, 0x45, 0x92, 0x03, 0x12, 0x18, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x15, 0x1a, 0x04, 0xa8, 0x45, 0x98, 0x03, 0x2a,
	0x41, 0x0a, 0x12, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x0b, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x45, 0x78,
	0x63, 0x65, 0x65, 0x64, 0x10, 0x00, 0x1a, 0x04, 0xa8, 0x45, 0xad, 0x03, 0x12, 0x14, 0x0a, 0x0a,
	0x4f, 0x75, 0x74, 0x4f, 0x66, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x10, 0x01, 0x1a, 0x04, 0xa8, 0x45,
	0x90, 0x03, 0x3a, 0x40, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xd4, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x3a, 0x36, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xd5, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x31, 0x5a, 0x2f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_status_proto_rawDescOnce sync.Once
	file_status_proto_rawDescData = file_status_proto_rawDesc
)

func file_status_proto_rawDescGZIP() []byte {
	file_status_proto_rawDescOnce.Do(func() {
		file_status_proto_rawDescData = protoimpl.X.CompressGZIP(file_status_proto_rawDescData)
	})
	return file_status_proto_rawDescData
}

var file_status_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_status_proto_goTypes = []interface{}{
	(StatusReason)(0),                     // 0: errors.StatusReason
	(ExtendStatusReason)(0),               // 1: errors.ExtendStatusReason
	(*descriptorpb.EnumOptions)(nil),      // 2: google.protobuf.EnumOptions
	(*descriptorpb.EnumValueOptions)(nil), // 3: google.protobuf.EnumValueOptions
}
var file_status_proto_depIdxs = []int32{
	2, // 0: errors.default_code:extendee -> google.protobuf.EnumOptions
	3, // 1: errors.code:extendee -> google.protobuf.EnumValueOptions
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	0, // [0:2] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_status_proto_init() }
func file_status_proto_init() {
	if File_status_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_status_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   0,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_status_proto_goTypes,
		DependencyIndexes: file_status_proto_depIdxs,
		EnumInfos:         file_status_proto_enumTypes,
		ExtensionInfos:    file_status_proto_extTypes,
	}.Build()
	File_status_proto = out.File
	file_status_proto_rawDesc = nil
	file_status_proto_goTypes = nil
	file_status_proto_depIdxs = nil
}
